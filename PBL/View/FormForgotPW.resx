<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ8NDg0NFREWFxURFRUY
        Hi0gGBolGxUVLT0hJTU3Li4uFx8zOD8sNygtLiv/2wBDAQoKCg0NDRUPDxUrHRUdKysrKy0tKystKysr
        KystLTcrKysrLSs3LSstKysrKysrKysrKy0rLS0tKysrKy0rLSv/wAARCACoASwDAREAAhEBAxEB/8QA
        HAAAAwADAQEBAAAAAAAAAAAAAAECAwUGBwQI/8QAMhAAAgIBAgQEBAQHAQAAAAAAAAECEQMEIQUGEjET
        QVFhInGR0UJSYoEHFiMyQ6HBM//EABkBAQEAAwEAAAAAAAAAAAAAAAABAgMEBf/EACURAQACAgICAQQD
        AQAAAAAAAAABAgMRBCESMRMyQVFhFCJxBf/aAAwDAQACEQMRAD8A5s9Z4wAAAAAAAAAAAAAYAUMAoIKA
        dAFAFAFAFAKgCgAKQAQACAAAAAAAAAAAAAAAAAAAAAAAAAAGAFDAKCGAAOgCgCgCgCgAAoAoBAFAKgEF
        BAAIAAAAAAAAAAAAAAAAAAAAAAYDKCghgOgHQAEOgCgCgCgCgCgCgFQAAqCgBAKgEFBAgAAAAAAAAAAA
        AAAAAABgBQwhgOgGAUEOgHQDoAoAoIdAFAKgCgpUAUAqAQCoKQCoBBQQIAAAAAAAAAAAAAAAGAANIqGA
        wGENIB0A6CHQDoB0AUAUAUAUAqAKAVAKgpUAmgEFIBNAIKRAgAAAAAAAAAAAAABgNFQwGBSQQ6AaQDSC
        KoB0AUEOgCgCgCgCgCgFQCoKVAKgE0FS0AgEFJgIKRAgAAAAAAAAAAAYDRQ0EMCkghpAUkENIBpAUkEO
        gHQQUA6AKAKAKAVAKgpUAqATQVLQCaCpaAQCCkwJCggQAAAAAAAADACikENAUghoCkghpAUkEUkA6CGk
        A6KHQQUA6AVAFAKgooCWiBUFJoCWgpNAS0FS0AgEFSwERSAAAAAAAAAYDRUUgGgikBSQQ0gKSCKSAaQR
        SRQ6CHQDoB0AUEFAFBSoBUAmgJaCk0QS0FS0FJoCWFSwJYUmAgpECAAAAAAGAyhoIpANBFICkEUgikgK
        SCKSKhpAUkA6CHQBQDoAoBUAqATQCaCpaATRFS0BLQVLCpYEsKlgJhUsBEUgAAAAABgNFRSAaCKQFIIp
        ICkEUgi0ihpBFJBFJANIIdAOgCgCgFQA0BLQUmgJaCpYCaIqGFSwJYVLCpYCYVLAQUiBAAAAAMopBDQF
        IIpAUgikEWgikUUgikgikgKSCGkA6CHQBQBQBQCoCWgpNBUtAS0FSwJZFSwqGFSwJYVLATCpYCZFIAAA
        GAyhoIpAUgikEUgKQRaCKRUUgKQRaQQ0gKSCHRQ6CCgCgCgpUQS0AmgqWgqGgJYVLCpZBDCpYVLCpYEs
        KlgIikAAADQDRUUgGgikBaCKQFIItBFIqKQRaApBFIIpIoaQRUo1tt2T2afdWAqAbAVAKgFQCaCoaIIa
        DJDCpYEMipYVLCoYEsKlhSYEhSIAAAaAaKikBSCKQFIIpBFoIpFFoIpBFoIpBFICkVDAqggAqKW9uqVr
        a7drb289/YiwiioKAfSE22uDlvXZcXjQ083jatO4qUl6qLds1zmxxOpntvrx8tq+UV6aicWrT233TW9m
        xp2wyQZQxsjJDCoZFSwqGFSwJYVLCpYCCkQIAKGgGgikBSCKQFIItBFIItFRaCKQRaApBFIoqghoIpAM
        BACAvHBzkoxXxTklFLbdvZIeoO5nUO84TyLCElLVTWVdO+KHVFKe34r3Xf0OK/KmY/rGnpYv+fETvJO/
        07KKSSS2SVJeiON6Tm+Ncn6bURyzxLw9ROTn4jlJxcm7acfT5HRj5Fq6ifTjy8Ol9zXq0vN+M8OnpM89
        PkcXKFbxdpppNP6M7qXi9fKHmZMc47TWfs10jJGNhUMipYVLCoYEsKlgSwpBSIEBVFQUA0gGgKQRSApB
        FoItFRcUGLLGITa1EqbV0hNigGgKQFIIaAYQBSArHNxaknTi0013TXZhHdcD536pqGsUIR6aWaCl/f8A
        qXkn7HFk4uo3R6WHn7nWTqPy2HFuc9LgcFhrUtv4+h0owr1rd9tjCnGtb303ZedSuvH+zmuN86ajPcdP
        enxONOmnkk/Xq/D+x0Y+NWv1dy5MvNvfqvUOT1GWU5Oc5SnKTuUpNyk37tm/WvTl3MzuWCQZMbCpZFQw
        qWFQwJYVLAlhSYUiBAfRLHRkw2noIux0g2KAaAaApBFoIyRRWMs8IlYzLb8v8IlrdRDBF9Kacpzq+iC7
        uvX7mGS8Ur5MsOOct4rD0H+R+H9HR05eqq8XxZdd+tf2/wCjh/lZN7en/Bxa13v/AFwnGODz0ebLinGW
        SEV8ORJxi018Mn9vY7seSL1iYeXlxTivNZ7hq3Eza9pCmA0EUAwEAAKwDqBonIGkSkF0xSZGSJBUMKhk
        VLCpYEsKhhUsCWFIKRAgPSec+VoYf6uJVBupLuo+5ow5fLqW3kYfHuHI6XhmXM+jHGUt7pLz9TotMR3L
        lrE26h92p5U1eOPW8Tpb7bmEZaz922cN4jemjyYnF01TRsa9sTRFCApAXEqM+NXSDCXpfDP4fYVHHLUZ
        cksnwyyQh0xx+8PX9zity53PjD0KcCuom09uv02jw4Uo4sWPGkqXRFR2OabTPuXdWla/TGmcxZFKKaaa
        TTVNNWmgOF4/yVGGPPqNPka6evL4LiulQW7jF+yO3HyZmYraHmZuDERNqT+9OFZ2POIKaAdhDAAHQQmg
        qWBDYZIbIqWwIYVLCoYVLIpUBLRRLiRUNBUsKkKRAgP0dqtLDNFxmk0/Jnl1tMenr2pFo1L59FwjBgbe
        OCVmVslre2FMNa+n2TxxappGG2yYh5Xz5wpYs/VCNKat0trPQwX3Xt5XJp426cdOJvc8SmMLaVpW0rbp
        L3b9CMoDVNrZ02rW6ApBGWDKxl3mg/iFljjxwy6eOSUelSyKbi5RXd9Nd6OaeJEzuJddedaIiJrt1vDO
        aNFqpQx48jWSfbHOEou6ur7HNfBesbmOnZj5WK8xET3LdGl0NXxPmDSaSfh58jjPo61FRctr2W3Z7G2m
        G943ENGTkY8c6tPbjeMc7Zc2GeLHgWJZVOHiOfVJ4+zpVs6OunGittzO9ODJzbXrNYrrbj2zpcRWA0wH
        YDQRlx42+wRucfLeqli8ZY301fu160a5zUidbbo42Sa+WumoyY3F012NrR6YljcnUVb32+Ssk9Mqxtgk
        wyhDIqGFSwqWBLCigKhHdOk6adNWn8wm234dy9qNVcoY6TbfbpivZGu2StfbbTFa/cQwcV4Fn0v/AKQa
        Xr5FreLekvjtT21E4GbGJYpxojJjYVIUEH6VPJeyAAD4uI8NxaiDjOKdrzW6M63ms9Nd8cWjt5/xfkXJ
        CM545KVW+nzo7K8iJ6lwX4sx3Dhc+Nxk4vunR0OVjCqQRcWVGaEgxmGfFmcWpRbUk0006aa7NMrHTo8X
        O/EIw6PExyaVLJLGnP7P6GieNj3vTpjmZojW2j1OrnlnLJknKc5u5Sk7bZviIiNQ5ZmbTue5YXIGisKL
        AdkDTKjJj7hJeh8pcI0csccjlHLka3g6+B/I4c+S8Tr1D0+LhxTHlPcuvjFJUlSSpLyo5Ho6+zmuYuXN
        NLHlzL+nKMXLbaLaOnFntExDh5HFxzWbR1LzLPs2j0HkxD52yM0MKlsCWFSFAH1aLQ5c7rHByfsrJNoj
        2RWbenVcF5Ly5Piy/Ar7Nbmi/IiPTox8W1vb0TQaSGmxRgltFJbLucV7eU7eljpFY0+fi2hxarG8c1s/
        Pa0KXms7TJji8alwnG+SXHfBJNekk7X0OunIifbivxJj6Zc5m5ZzxtOUNv05PsbPlhr+CzDLlrN+fH9M
        n2HywvwyX8s5/wA+Py8sn2Hywvwya5Xzv/Ji/frX/CfLC/Db8v/Z
</value>
  </data>
</root>